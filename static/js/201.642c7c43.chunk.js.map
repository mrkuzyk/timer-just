{"version":3,"file":"static/js/201.642c7c43.chunk.js","mappings":"6LACA,EAAsB,yBAAtB,EAAsD,0BAAtD,EAAuF,0B,SCCvF,ECGoB,SAAC,GAAY,IAAXA,EAAU,EAAVA,KAClB,GAA0BC,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOC,EAAP,KAAcC,EAAd,KAEA,GAAgCF,EAAAA,EAAAA,WAAS,GAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KAEA,GAAwBJ,EAAAA,EAAAA,UAAS,IAAjC,eAAOK,EAAP,KAAaC,EAAb,KACA,GAAwBN,EAAAA,EAAAA,UAAS,IAAjC,eAAOO,EAAP,KAAaC,EAAb,KACA,GAA0BR,EAAAA,EAAAA,UAAS,IAAnC,eAAOS,EAAP,KAAcC,EAAd,KACA,GAA8BV,EAAAA,EAAAA,UAAS,IAAvC,eAAOW,EAAP,KAAgBC,EAAhB,KACA,GAA8BZ,EAAAA,EAAAA,UAAS,IAAvC,eAAOa,EAAP,KAAgBC,EAAhB,KAEMC,GAAaC,EAAAA,EAAAA,QAAO,OAE1BC,EAAAA,EAAAA,YAAU,WAAQf,EAASH,EAAO,GAAE,CAACA,KAErCkB,EAAAA,EAAAA,YAAU,WACNhB,EAAMI,KAAOC,EAAQL,EAAMI,MAAQC,EAAQ,SAC3CE,EAAQP,EAAMiB,aACjB,GAAE,CAACnB,EAAME,KAEVgB,EAAAA,EAAAA,YAAU,WACN,OAAoCE,EAAAA,EAAAA,GAAaZ,GAAzCE,EAAR,EAAQA,MAAOE,EAAf,EAAeA,QAASE,EAAxB,EAAwBA,QACxBH,EAASD,GACTG,EAAWD,GACXG,EAAWD,EACd,GAAE,CAACN,KAEJU,EAAAA,EAAAA,YAAU,WACDd,IACLY,EAAWK,QAAUC,aAAY,WAC7Bb,GAAQ,SAAAc,GAAK,OAAIA,EAAQ,CAAZ,GAChB,GAAE,KACN,GAAE,CAACnB,KAEJc,EAAAA,EAAAA,YAAU,WACO,IAATV,GAAYgB,GACnB,GAAE,CAAChB,IAEJ,IAIMgB,EAAY,WACdC,cAAcT,EAAWK,SACzBhB,GAAY,EACf,EAED,OACI,2BACKC,GAEG,iCACI,0BAAKA,EAAL,QACA,iBAAKoB,UAAWC,EAAhB,UACKjB,KAAUkB,EAAAA,EAAAA,GAAe,KAAM,eAAGF,UAAWC,EAAd,UAAwBjB,EAAxB,QAChC,eAAGgB,UAAWC,EAAd,UAAwBf,EAAxB,QACA,eAAGc,UAAWC,EAAd,UAAwBb,EAAxB,WAEFV,IAAY,mBAAQyB,KAAK,SAASC,QApBjC,WACfzB,GAAY,EACf,EAkB6B,mBACbD,IAAY,mBAAQyB,KAAK,SAASC,QAASN,EAA/B,uBAGjB,sDAEJ,SAAC,KAAD,CAAMO,GAAE,UAAaL,UAAWC,EAAhC,uBACA,SAAC,KAAD,CAAMI,GAAE,QAAWL,UAAWC,EAA9B,sBAGX,C,oBCpED,IAJuB,SAACK,GACpB,OAAOC,OAAOD,GAAOE,SAAS,EAAG,IACpC,C,mCCQD,IAPqB,SAACF,GAIlB,MAAO,CAACtB,OAHMkB,EAAAA,EAAAA,GAAeO,KAAKC,MAAMJ,EAAQ,OAGjCpB,SAFCgB,EAAAA,EAAAA,GAAeO,KAAKC,MAAOJ,EAAQ,KAAQ,KAEnClB,SADRc,EAAAA,EAAAA,GAAeO,KAAKC,MAAOJ,EAAQ,KAAQ,KAE9D,C,2GCPD,ECE8B,WAC1B,OAAgB/B,EAAAA,EAAAA,WAAS,kCAAMoC,KAAKC,MAAMC,aAAaC,QAAQ,kBAAtC,QAAoD,EAApD,IAAlBtC,GAAP,eACA,OAAQ,SAACuC,EAAA,EAAD,CAAazC,KAAME,GAC9B,C","sources":["webpack://timer-just/./src/components/SingleTimer/singleTimer.module.scss?b7ed","components/SingleTimer/index.js","components/SingleTimer/SingleTimer.jsx","helpers/addLeadingZero.js","helpers/getTimeUnits.js","pages/DisposableSingleTimer/index.js","pages/DisposableSingleTimer/DisposableSingleTimer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"box\":\"singleTimer_box__qTJVT\",\"time\":\"singleTimer_time__7PDVt\",\"link\":\"singleTimer_link__Mrkly\"};","import SingleTimer from \"./SingleTimer\";\n\nexport default SingleTimer;","import { useEffect, useState, useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport { addLeadingZero, getTimeUnits } from 'helpers';\nimport s from './singleTimer.module.scss'\n\nconst SingleTimer = ({data}) => {\n    const [timer, setTimer] = useState({});\n    \n    const [runTimer, setRunTimer] = useState(false);\n    \n    const [name, setName] = useState('');\n    const [time, setTime] = useState('');\n    const [hours, setHours] = useState('');\n    const [minutes, setMinutes] = useState('');\n    const [seconds, setSeconds] = useState('');\n    \n    const intervalId = useRef(null);\n\n    useEffect(() => { setTimer(data) }, [data]);\n\n    useEffect(() => {\n        timer.name ? setName(timer.name) : setName('Timer');\n        setTime(timer.totalTimeSum); // витягую суму часу\n    }, [data, timer]);\n    \n    useEffect(() => {\n        const { hours, minutes, seconds } = getTimeUnits(time); // дістаю одиниці часу\n        setHours(hours);\n        setMinutes(minutes);\n        setSeconds(seconds);\n    }, [time]);\n\n    useEffect(() => {\n        if (!runTimer) return; // забороняю запуск одразу при завантаженні \n        intervalId.current = setInterval(() => {\n            setTime(state => state - 1); // запускаю таймер\n        }, 1000);\n    }, [runTimer]);\n\n    useEffect(() => {\n        if (time === 0) stopTimer(); // зупинка тамера коли закінчився час\n    }, [time]);\n\n    const startTimer = () => {\n        setRunTimer(true); \n    };\n\n    const stopTimer = () => {\n        clearInterval(intervalId.current);\n        setRunTimer(false);\n    };\n\n    return (\n        <div>\n            {name\n                ?\n                <>\n                    <h2>{name} </h2>\n                    <div className={s.box}>\n                        {hours !== addLeadingZero(0) && <p className={s.time} >{hours} </p>}\n                        <p className={s.time} >{minutes} </p>\n                        <p className={s.time} >{seconds} </p>\n                    </div>\n                    {!runTimer && <button type='button' onClick={startTimer}>start</button>}\n                    {runTimer && <button type='button' onClick={stopTimer}>pause</button>}\n                </>\n                :\n                <h1>НЕМА</h1>\n            }\n            <Link to={`/timers`} className={s.link}> Timers </Link>\n            <Link to={`/home`} className={s.link}> home </Link>\n        </div>\n    );\n};\n\nexport default SingleTimer;","// роблю обовязковими 2 цифри, і якщо є лиш одна, то ставлю спереді 0\nconst addLeadingZero = (value) => {\n    return String(value).padStart(2, '0');\n};\n\nexport default addLeadingZero;\n\n","import addLeadingZero from \"./addLeadingZero\";\n\n\n// переводжу суму часу в одиниці\nconst getTimeUnits = (value) => {\n    const hours = addLeadingZero(Math.floor(value / 3600));\n    const minutes = addLeadingZero(Math.floor((value % 3600) / 60));\n    const seconds = addLeadingZero(Math.floor((value % 3600) % 60));\n    return {hours, minutes, seconds};\n};\n\nexport default getTimeUnits;","import DisposableSingleTimer from \"./DisposableSingleTimer\";\n\nexport default DisposableSingleTimer;","import SingleTimer from \"components/SingleTimer\";\nimport { useState } from \"react\";\n\n\nconst DisposableSingleTimer = () => {\n    const [timer] = useState(() => JSON.parse(localStorage.getItem('single')) ?? []);\n    return (<SingleTimer data={timer} />);\n};\n\nexport default DisposableSingleTimer;\n"],"names":["data","useState","timer","setTimer","runTimer","setRunTimer","name","setName","time","setTime","hours","setHours","minutes","setMinutes","seconds","setSeconds","intervalId","useRef","useEffect","totalTimeSum","getTimeUnits","current","setInterval","state","stopTimer","clearInterval","className","s","addLeadingZero","type","onClick","to","value","String","padStart","Math","floor","JSON","parse","localStorage","getItem","SingleTimer"],"sourceRoot":""}