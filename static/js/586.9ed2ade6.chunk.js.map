{"version":3,"file":"static/js/586.9ed2ade6.chunk.js","mappings":"6LACA,GAAgB,UAAY,iCAAiC,IAAM,2BAA2B,UAAY,iCAAiC,QAAU,+BAA+B,KAAO,4BAA4B,OAAS,+B,kBCChO,ECIsB,SAAC,GAAY,IAAXA,EAAU,EAAVA,KACpB,GAA0BC,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAwBF,EAAAA,EAAAA,UAAS,IAAjC,eAAOG,EAAP,KAAaC,EAAb,KAEA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KACA,GAAgCN,EAAAA,EAAAA,UAAS,IAAzC,eAAOO,EAAP,KAAiBC,EAAjB,KAEA,GAAkCR,EAAAA,EAAAA,UAAS,IAA3C,eAAOS,EAAP,KAAkBC,EAAlB,KACA,GAAsCV,EAAAA,EAAAA,UAAS,IAA/C,eAAOW,EAAP,KAAoBC,EAApB,KACA,GAAsCZ,EAAAA,EAAAA,UAAS,IAA/C,eAAOa,EAAP,KAAoBC,EAApB,KACA,GAAkCd,EAAAA,EAAAA,UAAS,IAA3C,eAAOe,EAAP,KAAkBC,EAAlB,KACA,GAAsChB,EAAAA,EAAAA,UAAS,IAA/C,eAAOiB,EAAP,KAAoBC,EAApB,KACA,GAAsClB,EAAAA,EAAAA,UAAS,IAA/C,eAAOmB,EAAP,KAAoBC,EAApB,KACA,GAAwCpB,EAAAA,EAAAA,UAAS,GAAjD,eAAOqB,EAAP,KAAqBC,EAArB,KAEA,IAA4CtB,EAAAA,EAAAA,WAAS,GAArD,iBAAOuB,GAAP,MAAuBC,GAAvB,MACA,IAA4CxB,EAAAA,EAAAA,WAAS,GAArD,iBAAOyB,GAAP,MAAuBC,GAAvB,MACA,IAAsC1B,EAAAA,EAAAA,WAAS,GAA/C,iBAAO2B,GAAP,MAAoBC,GAApB,MAEMC,IAAaC,EAAAA,EAAAA,QAAO,MACpBC,GAAiBR,IAAkBE,GACnCO,IAAcC,EAAAA,EAAAA,MAEpBC,EAAAA,EAAAA,YAAU,WACNhC,EAASH,EACZ,GAAE,CAACA,KAEJmC,EAAAA,EAAAA,YAAU,WACN,IAAQC,EAAyClC,EAAzCkC,QAASC,EAAgCnC,EAAhCmC,QAASf,EAAuBpB,EAAvBoB,aAAclB,EAASF,EAATE,KACxCG,EAAY6B,GACZ3B,EAAY4B,GAERf,GAAgBC,EAAgBD,EAAe,GAE5CjB,EAAPD,GAA+B,QAClC,GAAE,CAACF,KAEJiC,EAAAA,EAAAA,YAAU,WACN,OAAoCG,EAAAA,EAAAA,GAAahC,GAAzCiC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,QAASC,EAAxB,EAAwBA,QACxB9B,EAAa4B,GACb1B,EAAe2B,GACfzB,EAAe0B,EAClB,GAAE,CAACnC,KAEJ6B,EAAAA,EAAAA,YAAU,WACN,OAAoCG,EAAAA,EAAAA,GAAa9B,GAAzC+B,EAAR,EAAQA,MAAOC,EAAf,EAAeA,QAASC,EAAxB,EAAwBA,QACxBxB,EAAasB,GACbpB,EAAeqB,GACfnB,EAAeoB,EAClB,GAAE,CAACjC,KAEJ2B,EAAAA,EAAAA,YAAU,WACFb,GAAiC,IAAjBA,GACfE,KAELM,GAAWY,QAAUC,aAAY,WAC7BpC,GAAY,SAAAqC,GAAK,OAAIA,EAAQ,CAAZ,GACpB,GAAE,KAEN,GAAE,CAACpB,MAEJW,EAAAA,EAAAA,YAAU,WACW,IAAb7B,IACAuC,KACApB,IAAkB,GAClBE,IAAkB,GAGzB,GAAE,CAACrB,KAEJ6B,EAAAA,EAAAA,YAAU,WACDT,KAELI,GAAWY,QAAUC,aAAY,WAC7BlC,GAAY,SAAAmC,GAAK,OAAIA,EAAQ,CAAZ,GACpB,GAAE,KACN,GAAE,CAAClB,MAEJS,EAAAA,EAAAA,YAAU,WACW,IAAb3B,IACAqC,KACAlB,IAAkB,IAGL,IAAbnB,GAAkBc,GAAgBO,IAAe,EAExD,GAAE,CAACrB,KAEJ2B,EAAAA,EAAAA,YAAU,WACFP,IAAeN,IACfwB,KACArB,IAAkB,GAIzB,GAAE,CAACG,KAEJ,IAAMkB,GAAY,WACd,GAAIxB,GAAgB,EAAG,CACnB,IAAQc,EAAqBlC,EAArBkC,QAASC,EAAYnC,EAAZmC,QACjBd,GAAgB,SAAAqB,GAAK,OAAIA,EAAQ,CAAZ,IACrBrC,EAAY6B,GACZ3B,EAAY4B,GACZU,IACH,CACJ,EAEKA,GAAa,WACE,IAAbzC,GAAkBmB,IAAkB,GACvB,IAAbnB,GAA+B,IAAbE,GAAkBmB,IAAkB,GACtDL,GAAgBO,IAAe,EACtC,EAEKgB,GAAY,WACdG,cAAclB,GAAWY,SACzBjB,IAAkB,GACD,IAAbnB,GAAkBqB,IAAkB,EAC3C,EAED,OACI,iBAAKsB,UAAWC,EAAAA,UAAhB,WACI,SAAC,KAAD,CAASC,GAAIlB,GAAc,KAAO,UAAY,IAAKgB,UAAWC,EAAAA,IAA9D,8CACChD,GAEG,iCACI,gBAAI+C,UAAWC,EAAAA,UAAf,UAA6B9C,EAA7B,QAEI,iBAAK6C,UAAWC,EAAAA,QAAhB,UACKxC,KAAc0C,EAAAA,EAAAA,GAAe,KAAM,eAAGH,UAAWC,EAAAA,KAAd,UAAwBxC,EAAxB,QACpC,eAAGuC,UAAWC,EAAAA,KAAd,UAAwBtC,EAAxB,QACA,eAAGqC,UAAWC,EAAAA,KAAd,UAAwBpC,EAAxB,UAGPY,KACG,iBAAKuB,UAAWC,EAAAA,IAAhB,UACKlC,KAAcoC,EAAAA,EAAAA,GAAe,KAAM,eAAGH,UAAWC,EAAAA,KAAd,UAAwBlC,EAAxB,QACpC,eAAGiC,UAAWC,EAAAA,KAAd,UAAwBhC,EAAxB,QACA,eAAG+B,UAAWC,EAAAA,KAAd,UAAwB9B,EAAxB,WAWNY,KAAmB,mBAAQqB,KAAK,SAASC,QAASP,GAAYE,UAAWC,EAAAA,OAAtD,4CACpBlB,KAAmB,mBAAQqB,KAAK,SAASC,QAAST,GAAWI,UAAWC,EAAAA,OAArD,gDAGxB,uDAIf,C,oBC7JD,IAJuB,SAACK,GACpB,OAAOC,OAAOD,GAAOE,SAAS,EAAG,IACpC,C,mCCQD,IAPqB,SAACF,GAIlB,MAAO,CAAChB,OAHMa,EAAAA,EAAAA,GAAeM,KAAKC,MAAMJ,EAAQ,OAGjCf,SAFCY,EAAAA,EAAAA,GAAeM,KAAKC,MAAOJ,EAAQ,KAAQ,KAEnCd,SADRW,EAAAA,EAAAA,GAAeM,KAAKC,MAAOJ,EAAQ,KAAQ,KAE9D,C,oHCPD,ECG2B,WACvB,OAAiBtD,EAAAA,EAAAA,WAAS,kCAAM2D,KAAKC,MAAMC,aAAaC,QAAQ,kBAAtC,QAAoD,EAApD,IAAnBC,GAAP,eACA,GAA0B/D,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACQ8D,GAAOC,EAAAA,EAAAA,MAAPD,GAOR,OALA9B,EAAAA,EAAAA,YAAU,WACN,IAAMgC,EAAiBH,EAAOI,MAAK,SAAAlE,GAAK,OAAIA,EAAM+D,KAAOA,CAAjB,IACpCE,GAAkBhE,EAASgE,EAClC,GAAE,CAACF,EAAID,KAEC,SAACK,EAAA,EAAD,CAAerE,KAAME,GACjC,C","sources":["webpack://timer-just/./src/components/IntervalTimer/intervalTimer.module.scss?e93d","components/IntervalTimer/index.js","components/IntervalTimer/IntervalTimer.jsx","helpers/addLeadingZero.js","helpers/getTimeUnits.js","pages/SavedIntervalTimer/index.js","pages/SavedIntervalTimer/SavedIntervalTimer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"intervalTimer_container__2AmuY\",\"btn\":\"intervalTimer_btn__OuyoB\",\"titleName\":\"intervalTimer_titleName__6WUJI\",\"boxTime\":\"intervalTimer_boxTime__FfNO3\",\"time\":\"intervalTimer_time__lVLTU\",\"button\":\"intervalTimer_button__3gSsc\"};","import IntervalTimer from './IntervalTimer.jsx';\n\nexport default IntervalTimer;","import { useEffect, useState, useRef } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { addLeadingZero, getTimeUnits } from 'helpers';\nimport s from './intervalTimer.module.scss';\nimport useWindowWidth from 'hooks';\n\nconst IntervalTimer = ({data}) => {\n    const [timer, setTimer] = useState({});\n    const [name, setName] = useState('');\n\n    const [timeWork, setTimeWork] = useState('');\n    const [timeRest, setTimeRest] = useState('');\n\n    const [workHours, setWorkHours] = useState('');\n    const [workMinutes, setWorkMinutes] = useState('');\n    const [workSeconds, setWorkSeconds] = useState('');\n    const [restHours, setRestHours] = useState('');\n    const [restMinutes, setRestMinutes] = useState('');\n    const [restSeconds, setRestSeconds] = useState('');\n    const [numbOfRepeat, setNumbOfRepeat] = useState(0);\n\n    const [applyWorkTimer, setApplyWorkTimer] = useState(false);\n    const [applyRestTimer, setApplyRestTimer] = useState(false);\n    const [applyRepeat, setApplyRepeat] = useState(false);\n\n    const intervalId = useRef(null);\n    const timerIsRunning = applyWorkTimer || applyRestTimer;\n    const windowWidth = useWindowWidth();\n\n    useEffect(() => {\n        setTimer(data)\n    }, [data]);\n\n    useEffect(() => {\n        const { workSum, restSum, numbOfRepeat, name } = timer;\n        setTimeWork(workSum); // отримую суму часу роботи\n        setTimeRest(restSum); // отримую суму часу відпочинку\n\n        if (numbOfRepeat) { setNumbOfRepeat(numbOfRepeat - 1) }; // отримую кількість повторів\n\n        name ? setName(name) : setName('Timer');\n    }, [timer]);\n    \n    useEffect(() => {\n        const { hours, minutes, seconds } = getTimeUnits(timeWork); // дістаю одиниці часу для роботи\n        setWorkHours(hours);\n        setWorkMinutes(minutes);\n        setWorkSeconds(seconds);\n    }, [timeWork]);\n\n    useEffect(() => {\n        const { hours, minutes, seconds } = getTimeUnits(timeRest); // дістаю одиниці часу для відпочинку\n        setRestHours(hours);\n        setRestMinutes(minutes);\n        setRestSeconds(seconds);\n    }, [timeRest]);\n\n    useEffect(() => {\n        if (numbOfRepeat && numbOfRepeat === 0) { return }; // якщо біле повторів немає, то кінець\n        if (!applyWorkTimer) return; // виключаю запуск одразу при завантажені\n\n        intervalId.current = setInterval(() => {\n            setTimeWork(state => state - 1); // таймер для робочого часу\n        }, 1000);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [applyWorkTimer]);\n\n    useEffect(() => {\n        if (timeWork === 0) {\n            stopTimer(); // автоматичне вимкнення таймера при закінченні часу\n            setApplyWorkTimer(false); // робота неактивна\n            setApplyRestTimer(true); // якщо робочий час закінчився, то автоматично вмикається відпочинок\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [timeWork]);\n\n    useEffect(() => {\n        if (!applyRestTimer) return; // виключаю запуск одразу при завантажені\n\n        intervalId.current = setInterval(() => {\n            setTimeRest(state => state - 1); // таймер для відпочинку\n        }, 1000);\n    }, [applyRestTimer])\n\n    useEffect(() => {\n        if (timeRest === 0) {\n            stopTimer(); // автоматична зупинка відпочинку, при завершені часу\n            setApplyRestTimer(false); // неактивний відпочинок\n        };\n\n        if (timeRest === 0 && numbOfRepeat) { setApplyRepeat(true) }; // запускаю наступне коло\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [timeRest]);\n\n    useEffect(() => {\n        if (applyRepeat && numbOfRepeat) {\n            newRepeat();\n            setApplyWorkTimer(true);\n        };\n        \n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [applyRepeat]);\n    \n    const newRepeat = () => {\n        if (numbOfRepeat >= 1) {\n            const { workSum, restSum } = timer;\n            setNumbOfRepeat(state => state - 1); // запускаю наступне коло\n            setTimeWork(workSum); // отримую суму часу роботи\n            setTimeRest(restSum); // отримую суму часу відпочинку\n            startTimer();\n        };\n    };\n\n    const startTimer = () => {\n        if (timeWork !== 0) { setApplyWorkTimer(true) }; // якщо є робочий час то тільки тоді можна запустити його і не дозволяю йти в мінус\n        if (timeWork === 0 && timeRest !== 0) { setApplyRestTimer(true) }; // дозволяю відновлювати відпочинок тільки коли нема робочого часу\n        if (numbOfRepeat) { setApplyRepeat(false) }; // зміна кола неактивна\n    };\n\n    const stopTimer = () => {\n        clearInterval(intervalId.current);\n        setApplyWorkTimer(false); // зупиняю таймер\n        if (timeWork === 0) { setApplyRestTimer(false) }; // якщо робочий час === 0, то тільки тоді можна зупиняти відпочинок\n    };\n\n    return (\n        <div className={s.container}>\n            <NavLink to={windowWidth < 1024 ? '/timers' : '/'} className={s.btn} > Назад </NavLink>\n            {timer\n                ?\n                <>\n                    <h2 className={s.titleName}>{name} </h2>\n                    {/* {applyWorkTimer && */}\n                        <div className={s.boxTime}>\n                            {workHours !== addLeadingZero(0) && <p className={s.time} >{workHours} </p>}\n                            <p className={s.time} >{workMinutes} </p>\n                            <p className={s.time} >{workSeconds} </p>\n                        </div>\n                    {/* } */}\n                    {applyRestTimer &&\n                        <div className={s.box}>\n                            {restHours !== addLeadingZero(0) && <p className={s.time} >{restHours} </p>}\n                            <p className={s.time} >{restMinutes} </p>\n                            <p className={s.time} >{restSeconds} </p>\n                        </div>\n                    }\n                    {/* {!applyRestTimer && !applyWorkTimer &&\n                        <div className={s.boxTime}>\n                            {restHours !== addLeadingZero(0) && <p className={s.time} >00 </p>}\n                            <p className={s.time} >00 </p>\n                            <p className={s.time} >00 </p>\n                        </div>\n                    } */}\n                    {/* {numbOfRepeat && <p className={s.time} >{numbOfRepeat} </p>} */}\n                    {!timerIsRunning &&  <button type='button' onClick={startTimer} className={s.button}>Старт</button>}\n                    {timerIsRunning &&  <button type='button' onClick={stopTimer} className={s.button}>Пауза</button>}\n                </>\n                :\n                <h1>НЕМА</h1>\n            }\n        </div>\n    );\n};\n\nexport default IntervalTimer;","// роблю обовязковими 2 цифри, і якщо є лиш одна, то ставлю спереді 0\nconst addLeadingZero = (value) => {\n    return String(value).padStart(2, '0');\n};\n\nexport default addLeadingZero;\n\n","import addLeadingZero from \"./addLeadingZero\";\n\n\n// переводжу суму часу в одиниці\nconst getTimeUnits = (value) => {\n    const hours = addLeadingZero(Math.floor(value / 3600));\n    const minutes = addLeadingZero(Math.floor((value % 3600) / 60));\n    const seconds = addLeadingZero(Math.floor((value % 3600) % 60));\n    return {hours, minutes, seconds};\n};\n\nexport default getTimeUnits;","import SavedIntervalTimer from \"./SavedIntervalTimer\";\n\nexport default SavedIntervalTimer;","import { useParams } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport IntervalTimer from \"components/IntervalTimer\";\n\n\nconst SavedIntervalTimer = () => {\n    const [timers] = useState(() => JSON.parse(localStorage.getItem('timers')) ?? []);\n    const [timer, setTimer] = useState('');\n    const { id } = useParams();\n\n    useEffect(() => {\n        const availableTimer = timers.find(timer => timer.id === id);\n        if (availableTimer) { setTimer(availableTimer) };\n    }, [id, timers])\n\n    return ( <IntervalTimer data={timer}/> );\n};\n\nexport default SavedIntervalTimer;\n"],"names":["data","useState","timer","setTimer","name","setName","timeWork","setTimeWork","timeRest","setTimeRest","workHours","setWorkHours","workMinutes","setWorkMinutes","workSeconds","setWorkSeconds","restHours","setRestHours","restMinutes","setRestMinutes","restSeconds","setRestSeconds","numbOfRepeat","setNumbOfRepeat","applyWorkTimer","setApplyWorkTimer","applyRestTimer","setApplyRestTimer","applyRepeat","setApplyRepeat","intervalId","useRef","timerIsRunning","windowWidth","useWindowWidth","useEffect","workSum","restSum","getTimeUnits","hours","minutes","seconds","current","setInterval","state","stopTimer","newRepeat","startTimer","clearInterval","className","s","to","addLeadingZero","type","onClick","value","String","padStart","Math","floor","JSON","parse","localStorage","getItem","timers","id","useParams","availableTimer","find","IntervalTimer"],"sourceRoot":""}