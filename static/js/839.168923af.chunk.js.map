{"version":3,"file":"static/js/839.168923af.chunk.js","mappings":"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","sources":["helpers/addLeadingZero.js","helpers/getTimeUnits.js","webpack://timer-just/./src/pages/Exp/exp.module.scss?054b","pages/Exp/Exp.jsx"],"sourcesContent":["// роблю обовязковими 2 цифри, і якщо є лиш одна, то ставлю спереді 0\nconst addLeadingZero = (value) => {\n    return String(value).padStart(2, '0');\n};\n\nexport default addLeadingZero;\n\n","import addLeadingZero from \"./addLeadingZero\";\n\n\n// переводжу суму часу в одиниці\nconst getTimeUnits = (value) => {\n    const hours = addLeadingZero(Math.floor(value / 3600));\n    const minutes = addLeadingZero(Math.floor((value % 3600) / 60));\n    const seconds = addLeadingZero(Math.floor((value % 3600) % 60));\n    return {hours, minutes, seconds};\n};\n\nexport default getTimeUnits;","// extracted by mini-css-extract-plugin\nexport default {\"box\":\"exp_box__nwbv8\",\"time\":\"exp_time__gzPsl\",\"link\":\"exp_link__2iMoD\"};","import { useEffect, useState, useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport { addLeadingZero, getTimeUnits } from 'helpers';\nimport s from './exp.module.scss'\n\nconst Exp = () => {\n    const [timer] = useState(() => JSON.parse(localStorage.getItem('tempTimerExp')) ?? '');\n    const [name, setName] = useState('');\n\n    const [timeWork, setTimeWork] = useState('');\n    const [timeRest, setTimeRest] = useState('');\n\n    const [workHours, setWorkHours] = useState('');\n    const [workMinutes, setWorkMinutes] = useState('');\n    const [workSeconds, setWorkSeconds] = useState('');\n    const [restHours, setRestHours] = useState('');\n    const [restMinutes, setRestMinutes] = useState('');\n    const [restSeconds, setRestSeconds] = useState('');\n\n    const [employWorkTimer, setEmployWorkTimer] = useState(false);\n    const [employRestTimer, setEmployRestTimer] = useState(false);\n\n    // const [firstRenderWork, setFirstRenderWork] = useState(true);\n    // const [firstRenderRest, setFirstRenderRest] = useState(true);\n\n    const intervalId = useRef(null);\n\n    useEffect(() => {\n        setTimeWork(timer.workSum); // отримую суму часу роботи\n        setTimeRest(timer.restSum); // отримую суму часу відпочинку\n        timer.name ? setName(timer.name) : setName('Timer');\n    }, [timer.name, timer.restSum, timer.workSum])\n    \n    useEffect(() => {\n        const { hours, minutes, seconds } = getTimeUnits(timeWork); // дістаю одиниці часу для роботи\n        setWorkHours(hours);\n        setWorkMinutes(minutes);\n        setWorkSeconds(seconds);\n    }, [timeWork])\n\n    useEffect(() => {\n        const { hours, minutes, seconds } = getTimeUnits(timeRest); // дістаю одиниці часу для відпочинку\n        setRestHours(hours);\n        setRestMinutes(minutes);\n        setRestSeconds(seconds);\n    }, [timeRest])\n\n    useEffect(() => {\n        if (!employWorkTimer) return;\n\n        // робочий таймер\n        intervalId.current = setInterval(() => {\n            setTimeWork(state => state - 1)\n        }, 1000);\n    }, [employWorkTimer]);\n\n    useEffect(() => {\n        if (timeWork === 0) {\n            stopTimer();\n            setEmployRestTimer(true);\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [timeWork]);\n\n    useEffect(() => {\n        if (!employRestTimer) return;\n\n        //відпочинковий таймер\n        intervalId.current = setInterval(() => {\n        setTimeRest(state => state - 1)\n        }, 1000);\n    }, [employRestTimer])\n\n    useEffect(() => {\n        if (timeRest === 0) stopTimer();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [timeRest]);\n\n    const startTimer = () => {\n        if (timeWork !== 0) { setEmployWorkTimer(true) };\n        if (timeRest !== 0) { setEmployWorkTimer(true) };\n        if (timeWork === 0) { setEmployRestTimer(true) };\n    };\n\n    const stopTimer = () => {\n        clearInterval(intervalId.current);\n        setEmployWorkTimer(false);\n        if (timeWork === 0) {\n            setEmployRestTimer(false)\n        };\n    };\n\n    // console.log(hours);\n    return (\n        <div>\n            {timer\n                ?\n                <>\n                    <h2>{name} </h2>\n                    <div className={s.box}>\n                        {workHours !== addLeadingZero(0) && <p className={s.time} >{workHours} </p>}\n                        <p className={s.time} >{workMinutes} </p>\n                        <p className={s.time} >{workSeconds} </p>\n                    </div>\n                    <div className={s.box}>\n                        {restHours !== addLeadingZero(0) && <p className={s.time} >{restHours} </p>}\n                        <p className={s.time} >{restMinutes} </p>\n                        <p className={s.time} >{restSeconds} </p>\n                    </div>\n                    <p >{name} </p>\n                    {  <button type='button' onClick={startTimer}>start</button>}\n                    {  <button type='button' onClick={stopTimer}>pause</button>}\n                </>\n                :\n                <h1>НЕМА</h1>\n            }\n            {/* <Link to={`/timers`} className={s.link}> Timers </Link> */}\n            <Link to={`/home`} className={s.link}> home </Link>\n        </div>\n    );\n};\n\nexport default Exp;"],"names":["value","String","padStart","hours","addLeadingZero","Math","floor","minutes","seconds","useState","JSON","parse","localStorage","getItem","timer","name","setName","timeWork","setTimeWork","timeRest","setTimeRest","workHours","setWorkHours","workMinutes","setWorkMinutes","workSeconds","setWorkSeconds","restHours","setRestHours","restMinutes","setRestMinutes","restSeconds","setRestSeconds","employWorkTimer","setEmployWorkTimer","employRestTimer","setEmployRestTimer","intervalId","useRef","useEffect","workSum","restSum","getTimeUnits","current","setInterval","state","stopTimer","clearInterval","className","s","type","onClick","to"],"sourceRoot":""}