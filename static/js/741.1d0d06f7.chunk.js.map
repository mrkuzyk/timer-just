{"version":3,"file":"static/js/741.1d0d06f7.chunk.js","mappings":"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","sources":["webpack://timer-just/./src/components/BoxEnteringTime/boxEnteringTime.module.scss?ad9b","components/BoxEnteringTime/index.js","components/BoxEnteringTime/BoxEnteringTime.jsx","webpack://timer-just/./src/components/BoxNameForTimer/boxNameForTimer.module.scss?237f","components/BoxNameForTimer/index.js","components/BoxNameForTimer/BoxNameForTimer.jsx","webpack://timer-just/./src/components/ButtonBack/buttonBack.module.scss?7f6a","components/ButtonBack/index.js","components/ButtonBack/ButtonBack.jsx","webpack://timer-just/./src/components/ButtonCreate/buttonCreate.module.scss?8cb0","components/ButtonCreate/index.js","components/ButtonCreate/ButtonCreate.jsx","webpack://timer-just/./src/components/ButtonHome/buttonHome.module.scss?786d","components/ButtonHome/index.js","components/ButtonHome/ButtonHome.jsx","webpack://timer-just/./src/components/ButtonSave/buttonSave.module.scss?c83f","components/ButtonSave/index.js","components/ButtonSave/ButtonSave.jsx","helpers/getTimeSum.js","webpack://timer-just/./src/pages/CreateSingleTimer/createSingleTimer.module.scss?416d","pages/CreateSingleTimer/index.js","pages/CreateSingleTimer/CreateSingleTimer.jsx","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/nanoid/index.browser.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"timeBox\":\"boxEnteringTime_timeBox__EN7+e\",\"timeTittle\":\"boxEnteringTime_timeTittle__KN0vf\",\"timeNumbBox\":\"boxEnteringTime_timeNumbBox__J4BWn\",\"timeLabel\":\"boxEnteringTime_timeLabel__A2kJR\",\"input\":\"boxEnteringTime_input__2HCdm\"};","import BoxEnteringTime from \"./BoxEnteringTime\";\n\nexport default BoxEnteringTime;","import PropTypes from 'prop-types';\nimport s from './boxEnteringTime.module.scss';\n\nconst BoxEnteringTime = ({name, hoursName, hoursValue, minutesName,minutesValue, secondsName, secondsValue, onChange}) => {\n    return (\n        <div className={s.timeBox}>\n            <p className={s.timeTittle}>{name}</p>\n            <div className={s.timeNumbBox}>\n                <label className={s.timeLabel}> години\n                    <input\n                        type=\"number\"\n                        name={hoursName}\n                        value={hoursValue}\n                        min=\"0\"\n                        max=\"23\"\n                        pattern=\"[0-9]{2}\"\n                        onChange={onChange}\n                        placeholder=\"гг\"\n                        className={s.input}\n                        title=\"Години\"\n                    />\n                </label>\n                <label className={s.timeLabel}> хвилини\n                    <input\n                        type=\"number\"\n                        name={minutesName}\n                        value={minutesValue}\n                        min=\"0\"\n                        max=\"59\"\n                        onChange={onChange}\n                        placeholder=\"хх\"\n                        className={s.input}\n                        title=\"Хвилини\"\n                    />\n                </label>\n                <label className={s.timeLabel}> секунди\n                    <input\n                        type=\"number\"\n                        name={secondsName}\n                        value={secondsValue}\n                        min=\"0\"\n                        max=\"59\"\n                        onChange={onChange}\n                        placeholder=\"сс\"\n                        className={s.input}\n                        title=\"Секунди\"\n                    />\n                </label>\n            </div>\n        </div>\n    );\n};\n\nexport default BoxEnteringTime;\n\nBoxEnteringTime.propTypes = {\n    name: PropTypes.string.isRequired,\n    hoursName: PropTypes.string.isRequired,\n    hoursValue: PropTypes.oneOfType([\n        PropTypes.number.isRequired,\n        PropTypes.string.isRequired\n    ]),\n    minutesName: PropTypes.string.isRequired,\n    minutesValue: PropTypes.oneOfType([\n        PropTypes.number.isRequired,\n        PropTypes.string.isRequired\n    ]),\n    secondsName: PropTypes.string.isRequired,\n    secondsValue: PropTypes.oneOfType([\n        PropTypes.number.isRequired,\n        PropTypes.string.isRequired\n    ]),\n    onChange: PropTypes.func.isRequired\n}","// extracted by mini-css-extract-plugin\nexport default {\"timerNameBox\":\"boxNameForTimer_timerNameBox__dH5Hq\",\"timerName\":\"boxNameForTimer_timerName__e8+qI\",\"timerNameSup\":\"boxNameForTimer_timerNameSup__uZRyu boxNameForTimer_timerName__e8+qI\",\"timerNameInput\":\"boxNameForTimer_timerNameInput__8z8Ui\"};","import BoxNameForTimer from \"./BoxNameForTimer\";\n\nexport default BoxNameForTimer;","import PropTypes from 'prop-types';\nimport s from './boxNameForTimer.module.scss';\n\nconst BoxNameForTimer = ({value, onChange, placeholder}) => {\n    return (\n        <div className={s.timerNameBox}>\n            <label className={s.timerName}> Ім'я для таймера <sup className={s.timerNameSup}>(необов'язково)</sup>\n                <input\n                    type=\"text\"\n                    name=\"name\"\n                    value={value}\n                    onChange={onChange}\n                    placeholder={placeholder}\n                    className={s.timerNameInput}\n                    title=\"Введіть ім'я таймера\"\n                />\n            </label>\n        </div>\n    );\n};\n\nexport default BoxNameForTimer;\n\nBoxNameForTimer.propTypes = {\n    value: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    placeholder: PropTypes.string.isRequired\n}","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"buttonBack_btn__5tEjt\"};","import ButtonBack from \"./ButtonBack\";\n\nexport default ButtonBack;","import { NavLink } from \"react-router-dom\";\nimport s from './buttonBack.module.scss';\n\nconst ButtonBack = () => {\n    return (\n        <>\n            <NavLink to='/create' className={s.btn} > Назад </NavLink>\n        </>\n    );\n};\n\nexport default ButtonBack;","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"buttonCreate_button__x8jFs\"};","import ButtonCreate from \"./ButtonCreate\";\n\nexport default ButtonCreate;","import PropTypes from 'prop-types';\nimport s from './buttonCreate.module.scss';\n\nconst ButtonCreate = ({ disabled}) => {\n    return (\n        <button\n            type=\"submit\"\n            className={s.button}\n            disabled={disabled}\n        >\n            Створити\n        </button>\n    );\n};\n\nexport default ButtonCreate;\n\nButtonCreate.propTypes = {\n    disabled: PropTypes.bool.isRequired\n};","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"buttonHome_btn__OggMn\"};","import ButtonHome from \"./ButtonHome\";\n\nexport default ButtonHome;","import { NavLink } from \"react-router-dom\";\nimport s from './buttonHome.module.scss';\n// import PropTypes from 'prop-types';\n\nconst ButtonHome = () => {\n    return (\n        <>\n            <NavLink to='/' className={s.btn} > Головна </NavLink>\n        </>\n    );\n};\n\nexport default ButtonHome;\n\n// ButtonHome.propTypes = {\n//     to: PropTypes.string.isRequired\n// };\n\n","// extracted by mini-css-extract-plugin\nexport default {\"saveBox\":\"buttonSave_saveBox__LrNkB\",\"saveLabel\":\"buttonSave_saveLabel__+XFev\",\"saveInput\":\"buttonSave_saveInput__X5Dts\"};","import ButtonSave from \"./ButtonSave\";\n\nexport default ButtonSave;","import PropTypes from 'prop-types';\nimport s from './buttonSave.module.scss';\n\nconst ButtonSave = ({checked, onChange}) => {\n    return (\n        <div className={s.saveBox}>\n            <label className={s.saveLabel} htmlFor=\"saveInput\"> Зберегти таймер </label>\n            <input \n                type=\"checkbox\"\n                name=\"handleChange\"\n                checked={checked}\n                onChange={onChange}\n                className={s.saveInput}\n                id=\"saveInput\"\n            />\n        </div>\n    )\n};\n\nexport default ButtonSave;\n\nButtonSave.propTypes = {\n    checked: PropTypes.bool.isRequired,\n    onChange: PropTypes.func.isRequired\n}","// переводжу весь час в секунди\nconst getTimeSum = (seconds, minutes, hours) => {\n    const second = seconds * 1;\n    const minute = minutes * 60;\n    const hour = (hours * 60) * 60;\n    const sum = second + minute + hour;\n    return sum;\n};\n\nexport default getTimeSum;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"createSingleTimer_container__+-u9p\",\"btnBox\":\"createSingleTimer_btnBox__b5pfL\",\"form\":\"createSingleTimer_form__of1-y\"};","import CreateSingleTimer from \"./CreateSingleTimer\";\n\nexport default CreateSingleTimer;","import { useEffect, useState } from \"react\";\nimport { Navigate } from 'react-router-dom';\nimport { nanoid } from 'nanoid';\nimport { getTimeSum } from 'helpers';\nimport s from './createSingleTimer.module.scss';\nimport ButtonHome from \"components/ButtonHome\";\nimport ButtonBack from \"components/ButtonBack\";\nimport ButtonSave from \"components/ButtonSave\";\nimport ButtonCreate from \"components/ButtonCreate\";\nimport BoxNameForTimer from \"components/BoxNameForTimer\";\nimport BoxEnteringTime from \"components/BoxEnteringTime\";\n\nconst CreateSingleTimer = () => {\n    const [timers, setTimers] = useState(() => JSON.parse(localStorage.getItem('timers')) ?? []); // лінива ініціалізація\n    const [disposableTimer, setDisposableTimer] = useState(''); // тут зберігається одноразові дані для переходу на створений таймер\n\n    const [saveTimer, setSaveTimer] = useState(false); // чи потрібно зберігати таймер\n    const [startTimer, setStartTimer] = useState(false); // для переходу на створений таймер\n    const [typeTimer] = useState('single');\n\n    const [name, setName] = useState('');\n    const [hours, setHours] = useState('');\n    const [minutes, setMinutes] = useState('');\n    const [seconds, setSeconds] = useState('');\n\n    const [totalTimeSum, setTotalTimeSum] = useState(''); //загальна сума часу\n    \n    const handleChange = e => {\n        const { name, value } = e.currentTarget; // отримую значення з input\n\n        switch (name) { // записую введені дані \n            case 'name':\n                setName(value);\n                break;\n            \n            case 'hours':\n                setHours(value);\n                break;\n            \n            case 'minutes':\n                setMinutes(value);\n                break;\n            \n            case 'seconds':\n                setSeconds(value);\n                break;\n        \n            default:\n                break;\n        };\n    };\n\n    const handleSave = e => {\n        setSaveTimer(prevState => !prevState) // якщо натиснути чекбокс \"зберегти\"\n    };\n\n    useEffect(() => {\n        const timeSum = getTimeSum(seconds, minutes, hours);\n        setTotalTimeSum(timeSum);\n    },[hours, minutes, seconds]);\n\n    useEffect(() => { // записую в локал сторедж таймери\n        window.localStorage.setItem('timers', JSON.stringify(timers))\n    }, [timers]);\n    \n    useEffect(() => { // записую в локал сторедж одноразовий таймер\n        window.localStorage.setItem('single', JSON.stringify(disposableTimer))\n    }, [disposableTimer]);\n\n    const handleCreate = e => {\n        e.preventDefault();\n\n        const timer = {\n            id: nanoid(6),\n            typeTimer,\n            name,\n            totalTimeSum,\n        }\n\n        if (saveTimer) { setTimers(prevState => [...timers, timer]) }; // якщо потрібно то додаю новий таймер до всіх\n\n        setDisposableTimer(timer); // додаю таймер в одноразовий сторедж\n        setStartTimer(true);\n        reset();\n    };\n\n    const reset = () => {\n        // очищую імпути\n        setName('');\n        setHours('');\n        setMinutes('');\n        setSeconds('');\n        setTotalTimeSum('');\n    };\n\n    return (\n        <div className={s.container}>\n            {startTimer && <Navigate to={`/timers/single`} replace={true} />}\n\n            <div className={s.btnBox}>\n                <ButtonBack/>\n                <ButtonHome/>\n            </div>\n            <form onSubmit={handleCreate} className={s.form}>\n                <BoxNameForTimer\n                    value={name}\n                    onChange={handleChange}\n                    placeholder={`Наприклад: Спринт`}\n                />\n                <BoxEnteringTime\n                    name={`Час таймера`}\n                    hoursName={`hours`}\n                    hoursValue={hours}\n                    minutesName={`minutes`}\n                    minutesValue={minutes}\n                    secondsName={`seconds`}\n                    secondsValue={seconds}\n                    onChange={handleChange}\n                />\n                <ButtonSave\n                    checked={saveTimer}\n                    onChange={handleSave}\n                />\n                <ButtonCreate disabled={!totalTimeSum}/>\n            </form>\n        </div>  \n    );\n};\n\nexport default CreateSingleTimer;\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["name","hoursName","hoursValue","minutesName","minutesValue","secondsName","secondsValue","onChange","className","s","type","value","min","max","pattern","placeholder","title","to","disabled","checked","htmlFor","id","seconds","minutes","hours","useState","JSON","parse","localStorage","getItem","timers","setTimers","disposableTimer","setDisposableTimer","saveTimer","setSaveTimer","startTimer","setStartTimer","typeTimer","setName","setHours","setMinutes","setSeconds","totalTimeSum","setTotalTimeSum","handleChange","e","currentTarget","useEffect","timeSum","getTimeSum","window","setItem","stringify","reset","replace","ButtonBack","ButtonHome","onSubmit","preventDefault","timer","nanoid","prevState","BoxNameForTimer","BoxEnteringTime","ButtonSave","ButtonCreate","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase"],"sourceRoot":""}