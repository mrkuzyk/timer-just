{"version":3,"file":"static/js/315.fa2ac6ad.chunk.js","mappings":"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","sources":["webpack://timer-just/./src/components/IntervalTimer/intervalTimer.module.scss?e93d","components/IntervalTimer/index.js","components/IntervalTimer/IntervalTimer.jsx","helpers/addLeadingZero.js","helpers/getTimeUnits.js","pages/DisposableIntervalTimer/index.js","pages/DisposableIntervalTimer/DisposableIntervalTimer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"box\":\"intervalTimer_box__1fHDK\",\"time\":\"intervalTimer_time__lVLTU\",\"link\":\"intervalTimer_link__IMVCe\"};","import IntervalTimer from './IntervalTimer.jsx';\n\nexport default IntervalTimer;","import { useEffect, useState, useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport { addLeadingZero, getTimeUnits } from 'helpers';\nimport s from './intervalTimer.module.scss';\n\nconst IntervalTimer = ({data}) => {\n    const [timer, setTimer] = useState({});\n    const [name, setName] = useState('');\n\n    const [timeWork, setTimeWork] = useState('');\n    const [timeRest, setTimeRest] = useState('');\n\n    const [workHours, setWorkHours] = useState('');\n    const [workMinutes, setWorkMinutes] = useState('');\n    const [workSeconds, setWorkSeconds] = useState('');\n    const [restHours, setRestHours] = useState('');\n    const [restMinutes, setRestMinutes] = useState('');\n    const [restSeconds, setRestSeconds] = useState('');\n\n    const [applyWorkTimer, setApplyWorkTimer] = useState(false);\n    const [applyRestTimer, setApplyRestTimer] = useState(false);\n\n    const intervalId = useRef(null);\n    const timerIsRunning = applyWorkTimer || applyRestTimer;\n\n    useEffect(() => {\n        setTimer(data)\n    }, [data]);\n\n    useEffect(() => {\n        setTimeWork(timer.workSum); // отримую суму часу роботи\n        setTimeRest(timer.restSum); // отримую суму часу відпочинку\n        timer.name ? setName(timer.name) : setName('Timer');\n    }, [timer.name, timer.restSum, timer.workSum])\n    \n    useEffect(() => {\n        const { hours, minutes, seconds } = getTimeUnits(timeWork); // дістаю одиниці часу для роботи\n        setWorkHours(hours);\n        setWorkMinutes(minutes);\n        setWorkSeconds(seconds);\n    }, [timeWork])\n\n    useEffect(() => {\n        const { hours, minutes, seconds } = getTimeUnits(timeRest); // дістаю одиниці часу для відпочинку\n        setRestHours(hours);\n        setRestMinutes(minutes);\n        setRestSeconds(seconds);\n    }, [timeRest])\n\n    useEffect(() => {\n        if (!applyWorkTimer) return; // виключаю запуск одразу при рендері\n\n        intervalId.current = setInterval(() => {\n            setTimeWork(state => state - 1); // таймер для робочого часу\n        }, 1000);\n    }, [applyWorkTimer]);\n\n    useEffect(() => {\n        if (timeWork === 0) {\n            stopTimer(); // автоматичне вимкнення таймера при закінченні часу\n            setApplyRestTimer(true); // якщо робочий час закінчився, то автоматично вмикається відпочинок\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [timeWork]);\n\n    useEffect(() => {\n        if (!applyRestTimer) return; // виключаю запуск одразу при рендері\n\n        //відпочинковий таймер\n        intervalId.current = setInterval(() => {\n            setTimeRest(state => state - 1); // таймер для відпочинку\n        }, 1000);\n    }, [applyRestTimer])\n\n    useEffect(() => {\n        if (timeRest === 0) { stopTimer() };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [timeRest]);\n\n    const startTimer = () => {\n        if (timeWork !== 0) { setApplyWorkTimer(true) }; // якщо є робочий час то тільки тоді можна запустити його і не дозволяю йти в мінус\n        if (timeWork === 0  && timeRest !== 0) { setApplyRestTimer(true) }; // дозволяю відновлювати відпочинок тільки коли нема робочого часу\n    };\n\n    const stopTimer = () => {\n        clearInterval(intervalId.current);\n        setApplyWorkTimer(false); // зупиняю таймер\n        if (timeWork === 0) { setApplyRestTimer(false) }; // якщо робочий час === 0, то тільки тоді можна зупитяти відпочинок\n    };\n\n    return (\n        <div>\n            {timer\n                ?\n                <>\n                    <h2>{name} </h2>\n                    <div className={s.box}>\n                        {workHours !== addLeadingZero(0) && <p className={s.time} >{workHours} </p>}\n                        <p className={s.time} >{workMinutes} </p>\n                        <p className={s.time} >{workSeconds} </p>\n                    </div>\n                    <div className={s.box}>\n                        {restHours !== addLeadingZero(0) && <p className={s.time} >{restHours} </p>}\n                        <p className={s.time} >{restMinutes} </p>\n                        <p className={s.time} >{restSeconds} </p>\n                    </div>\n                    <p >{name} </p>\n                    {!timerIsRunning &&  <button type='button' onClick={startTimer}>start</button>}\n                    {timerIsRunning &&  <button type='button' onClick={stopTimer}>pause</button>}\n                </>\n                :\n                <h1>НЕМА</h1>\n            }\n            <Link to={`/home`} className={s.link}> home </Link>\n        </div>\n    );\n};\n\nexport default IntervalTimer;","// роблю обовязковими 2 цифри, і якщо є лиш одна, то ставлю спереді 0\nconst addLeadingZero = (value) => {\n    return String(value).padStart(2, '0');\n};\n\nexport default addLeadingZero;\n\n","import addLeadingZero from \"./addLeadingZero\";\n\n\n// переводжу суму часу в одиниці\nconst getTimeUnits = (value) => {\n    const hours = addLeadingZero(Math.floor(value / 3600));\n    const minutes = addLeadingZero(Math.floor((value % 3600) / 60));\n    const seconds = addLeadingZero(Math.floor((value % 3600) % 60));\n    return {hours, minutes, seconds};\n};\n\nexport default getTimeUnits;","import DisposableIntervalTimer from \"./DisposableIntervalTimer\";\n\nexport default DisposableIntervalTimer;","import { useState } from \"react\";\nimport IntervalTimer from \"components/IntervalTimer\";\n\nconst DisposableIntervalTimer = () => {\n    const [timer] = useState(() => JSON.parse(localStorage.getItem('interval')) ?? '');\n    return ( <IntervalTimer data={timer}/> );\n};\n\nexport default DisposableIntervalTimer;\n"],"names":["data","useState","timer","setTimer","name","setName","timeWork","setTimeWork","timeRest","setTimeRest","workHours","setWorkHours","workMinutes","setWorkMinutes","workSeconds","setWorkSeconds","restHours","setRestHours","restMinutes","setRestMinutes","restSeconds","setRestSeconds","applyWorkTimer","setApplyWorkTimer","applyRestTimer","setApplyRestTimer","intervalId","useRef","timerIsRunning","useEffect","workSum","restSum","getTimeUnits","hours","minutes","seconds","current","setInterval","state","stopTimer","clearInterval","className","s","addLeadingZero","type","onClick","to","value","String","padStart","Math","floor","JSON","parse","localStorage","getItem","IntervalTimer"],"sourceRoot":""}