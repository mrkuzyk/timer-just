{"version":3,"file":"static/js/74.86e33ddb.chunk.js","mappings":"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","sources":["webpack://timer-just/./src/components/BoxEnteringTime/boxEnteringTime.module.scss?ad9b","components/BoxEnteringTime/index.js","components/BoxEnteringTime/BoxEnteringTime.jsx","webpack://timer-just/./src/components/BoxNameForTimer/boxNameForTimer.module.scss?237f","components/BoxNameForTimer/index.js","components/BoxNameForTimer/BoxNameForTimer.jsx","webpack://timer-just/./src/components/ButtonBack/buttonBack.module.scss?7f6a","components/ButtonBack/index.js","components/ButtonBack/ButtonBack.jsx","webpack://timer-just/./src/components/ButtonCreate/buttonCreate.module.scss?8cb0","components/ButtonCreate/index.js","components/ButtonCreate/ButtonCreate.jsx","webpack://timer-just/./src/components/ButtonHome/buttonHome.module.scss?786d","components/ButtonHome/index.js","components/ButtonHome/ButtonHome.jsx","webpack://timer-just/./src/components/ButtonSave/buttonSave.module.scss?c83f","components/ButtonSave/index.js","components/ButtonSave/ButtonSave.jsx","helpers/getTimeSum.js","webpack://timer-just/./src/pages/CreateIntervalTimer/createIntervalTimer.module.scss?e956","webpack://timer-just/./src/components/BoxRepeat/boxRepeat.module.scss?ac4c","components/BoxRepeat/index.js","components/BoxRepeat/BoxRepeat.jsx","pages/CreateIntervalTimer/index.js","pages/CreateIntervalTimer/CreateIntervalTimer.jsx","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/nanoid/index.browser.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"timeBox\":\"boxEnteringTime_timeBox__EN7+e\",\"timeTittle\":\"boxEnteringTime_timeTittle__KN0vf\",\"timeNumbBox\":\"boxEnteringTime_timeNumbBox__J4BWn\",\"timeLabel\":\"boxEnteringTime_timeLabel__A2kJR\",\"input\":\"boxEnteringTime_input__2HCdm\"};","import BoxEnteringTime from \"./BoxEnteringTime\";\n\nexport default BoxEnteringTime;","import PropTypes from 'prop-types';\nimport s from './boxEnteringTime.module.scss';\n\nconst BoxEnteringTime = ({name, hoursName, hoursValue, minutesName,minutesValue, secondsName, secondsValue, onChange}) => {\n    return (\n        <div className={s.timeBox}>\n            <p className={s.timeTittle}>{name}</p>\n            <div className={s.timeNumbBox}>\n                <label className={s.timeLabel}> години\n                    <input\n                        type=\"number\"\n                        name={hoursName}\n                        value={hoursValue}\n                        min=\"0\"\n                        max=\"23\"\n                        pattern=\"[0-9]{2}\"\n                        onChange={onChange}\n                        placeholder=\"гг\"\n                        className={s.input}\n                        title=\"Години\"\n                    />\n                </label>\n                <label className={s.timeLabel}> хвилини\n                    <input\n                        type=\"number\"\n                        name={minutesName}\n                        value={minutesValue}\n                        min=\"0\"\n                        max=\"59\"\n                        onChange={onChange}\n                        placeholder=\"хх\"\n                        className={s.input}\n                        title=\"Хвилини\"\n                    />\n                </label>\n                <label className={s.timeLabel}> секунди\n                    <input\n                        type=\"number\"\n                        name={secondsName}\n                        value={secondsValue}\n                        min=\"0\"\n                        max=\"59\"\n                        onChange={onChange}\n                        placeholder=\"сс\"\n                        className={s.input}\n                        title=\"Секунди\"\n                    />\n                </label>\n            </div>\n        </div>\n    );\n};\n\nexport default BoxEnteringTime;\n\nBoxEnteringTime.propTypes = {\n    name: PropTypes.string.isRequired,\n    hoursName: PropTypes.string.isRequired,\n    hoursValue: PropTypes.oneOfType([\n        PropTypes.number.isRequired,\n        PropTypes.string.isRequired\n    ]),\n    minutesName: PropTypes.string.isRequired,\n    minutesValue: PropTypes.oneOfType([\n        PropTypes.number.isRequired,\n        PropTypes.string.isRequired\n    ]),\n    secondsName: PropTypes.string.isRequired,\n    secondsValue: PropTypes.oneOfType([\n        PropTypes.number.isRequired,\n        PropTypes.string.isRequired\n    ]),\n    onChange: PropTypes.func.isRequired\n}","// extracted by mini-css-extract-plugin\nexport default {\"timerNameBox\":\"boxNameForTimer_timerNameBox__dH5Hq\",\"timerName\":\"boxNameForTimer_timerName__e8+qI\",\"timerNameSup\":\"boxNameForTimer_timerNameSup__uZRyu boxNameForTimer_timerName__e8+qI\",\"timerNameInput\":\"boxNameForTimer_timerNameInput__8z8Ui\"};","import BoxNameForTimer from \"./BoxNameForTimer\";\n\nexport default BoxNameForTimer;","import PropTypes from 'prop-types';\nimport s from './boxNameForTimer.module.scss';\n\nconst BoxNameForTimer = ({value, onChange, placeholder}) => {\n    return (\n        <div className={s.timerNameBox}>\n            <label className={s.timerName}> Ім'я для таймера <sup className={s.timerNameSup}>(необов'язково)</sup>\n                <input\n                    type=\"text\"\n                    name=\"name\"\n                    value={value}\n                    onChange={onChange}\n                    placeholder={placeholder}\n                    className={s.timerNameInput}\n                    title=\"Введіть ім'я таймера\"\n                />\n            </label>\n        </div>\n    );\n};\n\nexport default BoxNameForTimer;\n\nBoxNameForTimer.propTypes = {\n    value: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    placeholder: PropTypes.string.isRequired\n}","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"buttonBack_btn__5tEjt\"};","import ButtonBack from \"./ButtonBack\";\n\nexport default ButtonBack;","import useWindowWidth from \"hooks\";\nimport { NavLink } from \"react-router-dom\";\nimport s from './buttonBack.module.scss';\n\nconst ButtonBack = () => {\n    const windowWidth = useWindowWidth();\n\n    return (\n        <>\n            <NavLink to={windowWidth < 1024 ? '/create' : '/'} className={s.btn} > Назад </NavLink>\n        </>\n    );\n};\n\nexport default ButtonBack;","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"buttonCreate_button__x8jFs\"};","import ButtonCreate from \"./ButtonCreate\";\n\nexport default ButtonCreate;","import PropTypes from 'prop-types';\nimport s from './buttonCreate.module.scss';\n\nconst ButtonCreate = ({ disabled}) => {\n    return (\n        <button\n            type=\"submit\"\n            className={s.button}\n            disabled={disabled}\n        >\n            Створити\n        </button>\n    );\n};\n\nexport default ButtonCreate;\n\nButtonCreate.propTypes = {\n    disabled: PropTypes.bool.isRequired\n};","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"buttonHome_btn__OggMn\"};","import ButtonHome from \"./ButtonHome\";\n\nexport default ButtonHome;","import { NavLink } from \"react-router-dom\";\nimport s from './buttonHome.module.scss';\n// import PropTypes from 'prop-types';\n\nconst ButtonHome = () => {\n    return (\n        <>\n            <NavLink to='/' className={s.btn} > Головна </NavLink>\n        </>\n    );\n};\n\nexport default ButtonHome;\n\n// ButtonHome.propTypes = {\n//     to: PropTypes.string.isRequired\n// };\n\n","// extracted by mini-css-extract-plugin\nexport default {\"saveBox\":\"buttonSave_saveBox__LrNkB\",\"saveLabel\":\"buttonSave_saveLabel__+XFev\",\"saveInput\":\"buttonSave_saveInput__X5Dts\"};","import ButtonSave from \"./ButtonSave\";\n\nexport default ButtonSave;","import PropTypes from 'prop-types';\nimport s from './buttonSave.module.scss';\n\nconst ButtonSave = ({checked, onChange}) => {\n    return (\n        <div className={s.saveBox}>\n            <label className={s.saveLabel} htmlFor=\"saveInput\"> Зберегти таймер </label>\n            <input \n                type=\"checkbox\"\n                name=\"handleChange\"\n                checked={checked}\n                onChange={onChange}\n                className={s.saveInput}\n                id=\"saveInput\"\n            />\n        </div>\n    )\n};\n\nexport default ButtonSave;\n\nButtonSave.propTypes = {\n    checked: PropTypes.bool.isRequired,\n    onChange: PropTypes.func.isRequired\n}","// переводжу весь час в секунди\nconst getTimeSum = (seconds, minutes, hours) => {\n    const second = seconds * 1;\n    const minute = minutes * 60;\n    const hour = (hours * 60) * 60;\n    const sum = second + minute + hour;\n    return sum;\n};\n\nexport default getTimeSum;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"createIntervalTimer_container__vHqQa\",\"btnBox\":\"createIntervalTimer_btnBox__OyaDZ\",\"form\":\"createIntervalTimer_form__bNsx2\"};","// extracted by mini-css-extract-plugin\nexport default {\"repeatBox\":\"boxRepeat_repeatBox__XTqHc\",\"repeatLabel\":\"boxRepeat_repeatLabel__DTpN3\",\"repeatSpan\":\"boxRepeat_repeatSpan__Zw38O\",\"repeatInput\":\"boxRepeat_repeatInput__OJ4TL\"};","import BoxRepeat from \"./BoxRepeat\";\n\nexport default BoxRepeat;","import PropTypes from 'prop-types';\nimport s from './boxRepeat.module.scss';\n\nconst BoxRepeat = ({value, onChange}) => {\n    return (\n        <div className={s.repeatBox}>\n            <label className={s.repeatLabel} htmlFor=\"repeatInput\">\n                <span className={s.repeatSpan}>Кількість повторів </span>\n            </label>\n            <input\n                type=\"number\"\n                name=\"repeat\"\n                value={value}\n                min=\"0\"\n                max=\"99\"\n                onChange={onChange}\n                placeholder=\"0\"\n                className={s.repeatInput}\n                title=\"Кількість повторів\"\n                id='repeatInput'\n            />\n        </div>\n    );\n};\n\nexport default BoxRepeat;\n\nBoxRepeat.propTypes = {\n    value: PropTypes.oneOfType([\n        PropTypes.number.isRequired,\n        PropTypes.string.isRequired\n    ]),\n    onChange: PropTypes.func.isRequired\n}","import CreateIntervalTimer from \"./CreateIntervalTimer\";\n\nexport default CreateIntervalTimer;","import { useEffect, useState } from \"react\";\nimport { Navigate } from 'react-router-dom';\nimport { nanoid } from 'nanoid';\nimport { getTimeSum } from 'helpers';\nimport s from './createIntervalTimer.module.scss';\nimport ButtonBack from \"components/ButtonBack\";\nimport ButtonHome from \"components/ButtonHome\";\nimport ButtonSave from \"components/ButtonSave\";\nimport ButtonCreate from \"components/ButtonCreate\";\nimport BoxRepeat from \"components/BoxRepeat\";\nimport BoxEnteringTime from \"components/BoxEnteringTime\";\nimport BoxNameForTimer from \"components/BoxNameForTimer\";\n\nconst CreateIntervalTimer = () => {\n    const [timers, setTimers] = useState(() => JSON.parse(localStorage.getItem('timers')) ?? []); // лінива ініціалізація\n    const [disposableTimer, setDisposableTimer] = useState('');\n\n    const [saveTimer, setSaveTimer] = useState(false);\n    const [startTimer, setStartTimer] = useState(false);\n    const [typeTimer] = useState('interval');\n\n    const [name, setName] = useState('');\n    const [workHours, setWorkHours] = useState('');\n    const [workMinutes, setWorkMinutes] = useState('');\n    const [workSeconds, setWorkSeconds] = useState('');\n    const [restHours, setRestHours] = useState('');\n    const [restMinutes, setRestMinutes] = useState('');\n    const [restSeconds, setRestSeconds] = useState('');\n    const [numbOfRepeat, setNumbOfRepeat] = useState('');\n\n    const [workSum, setWorkSum] = useState('');\n    const [restSum, setRestSum] = useState('');\n\n    const handleChange = e => {\n        const { name, value } = e.currentTarget; // отримую значення з інпуту\n\n        switch (name) {  // записую введені дані \n            case 'name':\n                setName(value);\n                break;\n            \n            case 'workHours':\n                setWorkHours(value);\n                break;\n            \n            case 'workMinutes':\n                setWorkMinutes(value);\n                break;\n            \n            case 'workSeconds':\n                setWorkSeconds(value);\n                break;\n            \n            case 'restHours':\n                setRestHours(value);\n                break;\n            \n            case 'restMinutes':\n                setRestMinutes(value);\n                break;\n            \n            case 'restSeconds':\n                setRestSeconds(value);\n                break;\n            \n            case 'repeat':\n                setNumbOfRepeat(Number(value));\n                break;\n        \n            default:\n                break;\n        };\n    };\n\n    const handleSave = e => {\n        setSaveTimer(prevState => !prevState) // якщо натиснути чекбокс \"зберегти\"\n    };\n\n    useEffect(() => { \n        const timeSum = getTimeSum( workSeconds, workMinutes, workHours );\n        setWorkSum(timeSum);\n    }, [workSeconds, workMinutes, workHours]);\n\n    useEffect(() => { \n        const timeRestSum = getTimeSum( restSeconds, restMinutes, restHours );\n        setRestSum(timeRestSum);\n    },[restSeconds, restMinutes, restHours])\n\n    const handleCreate = (e) => {\n        e.preventDefault();\n\n        const timer = {\n            id: nanoid(6),\n            typeTimer,\n            name,\n            workSum,\n            restSum,\n            numbOfRepeat\n        };\n\n        if (saveTimer) { setTimers(prevState => [...timers, timer]) }; // якщо потрібно то додаю новий таймер до всіх\n        \n        setDisposableTimer(timer) // додаю таймер в одноразовий сторедж\n        setStartTimer(true) // \n        reset();\n    };\n\n    const reset = () => {\n        // очищую імпути\n        setName('');\n        setWorkHours('');\n        setWorkMinutes('');\n        setWorkSeconds('');\n        setRestHours('');\n        setRestMinutes('');\n        setRestSeconds('');\n        setWorkSum('');\n        setRestSum('');\n        setNumbOfRepeat('');\n    };\n\n    useEffect(() => { // записую в локал сторедж таймери\n        window.localStorage.setItem('timers', JSON.stringify(timers))\n    }, [timers])\n    \n    useEffect(() => { // записую в локал сторедж одноразовий таймер\n        window.localStorage.setItem('interval', JSON.stringify(disposableTimer))\n    },[disposableTimer])\n\n    return (\n        <div className={s.container}>\n            {startTimer && <Navigate to={`/timers/interval`} replace={true} />}\n            <div className={s.btnBox}>\n                <ButtonBack />\n                <ButtonHome/>\n            </div>\n            <form onSubmit={handleCreate} className={s.form}>\n                <BoxNameForTimer\n                    value={name}\n                    onChange={handleChange}\n                    placeholder={`Наприклад: Біг з прискоренням`}\n                />\n                <BoxEnteringTime\n                    name={`Час таймера`}\n                    hoursName={`workHours`}\n                    hoursValue={workHours}\n                    minutesName={`workMinutes`}\n                    minutesValue={workMinutes}\n                    secondsName={`workSeconds`}\n                    secondsValue={workSeconds}\n                    onChange={handleChange}\n                />\n                <BoxEnteringTime\n                    name={`Час відпочинку`}\n                    hoursName={`restHours`}\n                    hoursValue={restHours}\n                    minutesName={`restMinutes`}\n                    minutesValue={restMinutes}\n                    secondsName={`restSeconds`}\n                    secondsValue={restSeconds}\n                    onChange={handleChange}\n                />\n                <BoxRepeat\n                    value={numbOfRepeat}\n                    onChange={handleChange}\n                />\n                <ButtonSave\n                    checked={saveTimer}\n                    onChange={handleSave}\n                />\n                <ButtonCreate disabled={!workSum}/>\n            </form>\n        </div>\n    );\n};\n\nexport default CreateIntervalTimer;","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["name","hoursName","hoursValue","minutesName","minutesValue","secondsName","secondsValue","onChange","className","s","type","value","min","max","pattern","placeholder","title","windowWidth","useWindowWidth","to","disabled","checked","htmlFor","id","seconds","minutes","hours","useState","JSON","parse","localStorage","getItem","timers","setTimers","disposableTimer","setDisposableTimer","saveTimer","setSaveTimer","startTimer","setStartTimer","typeTimer","setName","workHours","setWorkHours","workMinutes","setWorkMinutes","workSeconds","setWorkSeconds","restHours","setRestHours","restMinutes","setRestMinutes","restSeconds","setRestSeconds","numbOfRepeat","setNumbOfRepeat","workSum","setWorkSum","restSum","setRestSum","handleChange","e","currentTarget","Number","useEffect","timeSum","getTimeSum","timeRestSum","reset","window","setItem","stringify","replace","ButtonBack","ButtonHome","onSubmit","preventDefault","timer","nanoid","prevState","BoxNameForTimer","BoxEnteringTime","ButtonSave","ButtonCreate","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase"],"sourceRoot":""}