{"version":3,"file":"static/js/789.194d3417.chunk.js","mappings":"4OACA,IAQA,EARmB,SAAC,GAKhB,OAJyB,EADuB,EAA9BA,QAEO,GAFuB,EAArBC,QAGL,GAH0B,EAAZC,MAGR,EAG/B,ECFD,EAJuB,SAACC,GACpB,OAAOC,OAAOD,GAAOE,SAAS,EAAG,IACpC,ECQD,EAPqB,SAACF,GAIlB,MAAO,CAACD,MAHMI,EAAeC,KAAKC,MAAML,EAAQ,OAGjCF,QAFCK,EAAeC,KAAKC,MAAOL,EAAQ,KAAQ,KAEnCH,QADRM,EAAeC,KAAKC,MAAOL,EAAQ,KAAQ,KAE9D,ECPD,EAFqBM,KAAKC,MAAMC,aAAaC,QAAQ,WCErD,EAFuBH,KAAKC,MAAMC,aAAaC,QAAQ,a,mHCCvD,EAAsB,sBAAtB,EAAmD,uBAAnD,EAAiF,uB,SCCjF,ECGiB,WACb,OAAiBC,EAAAA,EAAAA,WAAS,kBAAMC,EAAAA,EAAN,IAAnBC,GAAP,eACQC,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAAwBH,EAAAA,EAAAA,UAAS,IAAjC,eAAOK,EAAP,KAAaC,EAAb,KACA,GAAwBN,EAAAA,EAAAA,UAAS,IAAjC,eAAOO,EAAP,KAAaC,EAAb,KACA,GAA0BR,EAAAA,EAAAA,UAAS,IAAnC,eAAOX,EAAP,KAAcoB,EAAd,KACA,GAA8BT,EAAAA,EAAAA,UAAS,IAAvC,eAAOZ,EAAP,KAAgBsB,EAAhB,KACA,GAA8BV,EAAAA,EAAAA,UAAS,IAAvC,eAAOb,EAAP,KAAgBwB,EAAhB,KACA,GAAgCX,EAAAA,EAAAA,WAAS,GAAzC,eAAOY,EAAP,KAAiBC,EAAjB,KAEMC,GAAaC,EAAAA,EAAAA,QAAO,OAG1BC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAcf,EAAOgB,MAAK,SAAAC,GAAK,OAAIA,EAAMhB,KAAOA,CAAjB,IAEjCc,IACAT,EAAQS,EAAYV,MACpBD,EAAQW,EAAYG,KAG3B,GAAE,CAACjB,EAAID,KAERc,EAAAA,EAAAA,YAAU,WACN,OAAoCK,EAAAA,EAAAA,IAAahB,GAAzChB,EAAR,EAAQA,MAAOD,EAAf,EAAeA,QAASD,EAAxB,EAAwBA,QACxBsB,EAASpB,GACTqB,EAAWtB,GACXuB,EAAWxB,EACd,GAAE,CAACkB,KAEJW,EAAAA,EAAAA,YAAU,WACDJ,IACLE,EAAWQ,QAAUC,aAAY,WACjCjB,GAAQ,SAAAkB,GAAK,OAAIA,EAAQ,CAAZ,GACZ,GAAE,KACN,GAAE,CAACZ,IAEJ,IAIMa,EAAY,WACdC,cAAcZ,EAAWQ,SACzBT,GAAY,EACf,EAOD,OALAG,EAAAA,EAAAA,YAAU,WACO,IAATX,GAAYoB,GACnB,GAAE,CAACpB,KAIA,2BACKE,GAEG,iCACI,0BAAKA,EAAL,QACA,iBAAKoB,UAAWC,EAAhB,UACKvC,KAAUI,EAAAA,EAAAA,IAAe,KAAM,eAAGkC,UAAWC,EAAd,UAAwBvC,EAAxB,QAChC,eAAGsC,UAAWC,EAAd,UAAwBxC,EAAxB,QACA,eAAGuC,UAAWC,EAAd,UAAwBzC,EAAxB,WAEFyB,IAAY,mBAAQiB,KAAK,SAASC,QAzBjC,WACfjB,GAAY,EACf,EAuB6B,mBACbD,IAAY,mBAAQiB,KAAK,SAASC,QAASL,EAA/B,uBAGjB,sDAEJ,SAAC,KAAD,CAAMM,GAAE,UAAaJ,UAAWC,EAAhC,uBACA,SAAC,KAAD,CAAMG,GAAE,QAAWJ,UAAWC,EAA9B,sBAGX,C","sources":["helpers/getTimeSum.js","helpers/addLeadingZero.js","helpers/getTimeUnits.js","helpers/getAllTimers.js","helpers/getOneOffTimer.js","webpack://timer-just/./src/pages/OneTimer/oneTimer.module.scss?65cc","pages/OneTimer/index.js","pages/OneTimer/OneTimer.jsx"],"sourcesContent":["// переводжу весь час в секунди\nconst getTimeSum = ({ seconds, minutes, hours }) => {\n    const second = seconds * 1;\n    const minute = minutes * 60;\n    const hour = (hours * 60) * 60;\n    const sum = second + minute + hour;\n    return sum;\n};\n\nexport default getTimeSum;\n","// роблю обовязковими 2 цифри, і якщо є лиш одна, то ставлю спереді 0\nconst addLeadingZero = (value) => {\n    return String(value).padStart(2, '0');\n};\n\nexport default addLeadingZero;\n\n","import addLeadingZero from \"./addLeadingZero\";\n\n\n// переводжу суму часу в одиниці\nconst getTimeUnits = (value) => {\n    const hours = addLeadingZero(Math.floor(value / 3600));\n    const minutes = addLeadingZero(Math.floor((value % 3600) / 60));\n    const seconds = addLeadingZero(Math.floor((value % 3600) % 60));\n    return {hours, minutes, seconds};\n};\n\nexport default getTimeUnits;","const getAllTimers = JSON.parse(localStorage.getItem('timers'));\n\nexport default getAllTimers;","const getOneOffTimer = JSON.parse(localStorage.getItem('tempTimer'));\n\nexport default getOneOffTimer;","// extracted by mini-css-extract-plugin\nexport default {\"box\":\"oneTimer_box__T8Hg1\",\"time\":\"oneTimer_time__Xa99Q\",\"link\":\"oneTimer_link__JUxQB\"};","import OneTimer from \"./OneTimer\";\n\nexport default OneTimer;","import { useEffect, useState, useRef } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { addLeadingZero, getAllTimers, getTimeUnits } from 'helpers';\nimport s from './oneTimer.module.scss'\n\nconst OneTimer = () => {\n    const [timers] = useState(() => getAllTimers); // лінива ініціалізація\n    const { id } = useParams();\n    const [time, setTime] = useState('');\n    const [name, setName] = useState('');\n    const [hours, setHours] = useState('');\n    const [minutes, setMinutes] = useState('');\n    const [seconds, setSeconds] = useState('');\n    const [runTimer, setRunTimer] = useState(false);\n    \n    const intervalId = useRef(null);\n    // console.log(intervalId);\n\n    useEffect(() => {\n        const availableId = timers.find(timer => timer.id === id);\n\n        if (availableId) {\n            setName(availableId.name);\n            setTime(availableId.sum);\n        }\n\n    }, [id, timers])\n    \n    useEffect(() => {\n        const { hours, minutes, seconds } = getTimeUnits(time); // дістаю одиниці часу\n        setHours(hours);\n        setMinutes(minutes);\n        setSeconds(seconds);\n    }, [time])\n\n    useEffect(() => {\n        if (!runTimer) return;\n        intervalId.current = setInterval(() => {\n        setTime(state => state - 1)\n        }, 1000);\n    }, [runTimer])\n\n    const startTimer = () => {\n        setRunTimer(true);\n    };\n\n    const stopTimer = () => {\n        clearInterval(intervalId.current);\n        setRunTimer(false);\n    }\n\n    useEffect(() => {\n        if (time === 0) stopTimer();\n    }, [time])\n\n    // console.log(hours);\n    return (\n        <div>\n            {name\n                ?\n                <>\n                    <h2>{name} </h2>\n                    <div className={s.box}>\n                        {hours !== addLeadingZero(0) && <p className={s.time} >{hours} </p>}\n                        <p className={s.time} >{minutes} </p>\n                        <p className={s.time} >{seconds} </p>\n                    </div>\n                    {!runTimer && <button type='button' onClick={startTimer}>start</button>}\n                    {runTimer && <button type='button' onClick={stopTimer}>pause</button>}\n                </>\n                :\n                <h1>НЕМА</h1>\n            }\n            <Link to={`/timers`} className={s.link}> Timers </Link>\n            <Link to={`/home`} className={s.link}> home </Link>\n        </div>\n    );\n};\n\nexport default OneTimer;"],"names":["seconds","minutes","hours","value","String","padStart","addLeadingZero","Math","floor","JSON","parse","localStorage","getItem","useState","getAllTimers","timers","id","useParams","time","setTime","name","setName","setHours","setMinutes","setSeconds","runTimer","setRunTimer","intervalId","useRef","useEffect","availableId","find","timer","sum","getTimeUnits","current","setInterval","state","stopTimer","clearInterval","className","s","type","onClick","to"],"sourceRoot":""}