{"version":3,"file":"static/js/538.9f56664a.chunk.js","mappings":"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","sources":["webpack://timer-just/./src/components/ButtonBack/buttonBack.module.scss?7f6a","components/ButtonBack/index.js","components/ButtonBack/ButtonBack.jsx","webpack://timer-just/./src/components/ButtonHome/buttonHome.module.scss?786d","components/ButtonHome/index.js","components/ButtonHome/ButtonHome.jsx","helpers/getTimeSum.js","webpack://timer-just/./src/pages/CreateIntervalTimer/createIntervalTimer.module.scss?e956","pages/CreateIntervalTimer/index.js","pages/CreateIntervalTimer/CreateIntervalTimer.jsx","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/nanoid/index.browser.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"buttonBack_btn__5tEjt\"};","import ButtonBack from \"./ButtonBack\";\n\nexport default ButtonBack;","import { NavLink } from \"react-router-dom\";\nimport s from './buttonBack.module.scss';\n\nconst ButtonBack = () => {\n    return (\n        <>\n            <NavLink to='/create' className={s.btn} > Назад </NavLink>\n        </>\n    );\n};\n\nexport default ButtonBack;","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"buttonHome_btn__OggMn\"};","import ButtonHome from \"./ButtonHome\";\n\nexport default ButtonHome;","import { NavLink } from \"react-router-dom\";\nimport s from './buttonHome.module.scss';\n// import PropTypes from 'prop-types';\n\nconst ButtonHome = () => {\n    return (\n        <>\n            <NavLink to='/' className={s.btn} > Головна </NavLink>\n        </>\n    );\n};\n\nexport default ButtonHome;\n\n// ButtonHome.propTypes = {\n//     to: PropTypes.string.isRequired\n// };\n\n","// переводжу весь час в секунди\nconst getTimeSum = (seconds, minutes, hours) => {\n    const second = seconds * 1;\n    const minute = minutes * 60;\n    const hour = (hours * 60) * 60;\n    const sum = second + minute + hour;\n    return sum;\n};\n\nexport default getTimeSum;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"createIntervalTimer_container__vHqQa\",\"btnBox\":\"createIntervalTimer_btnBox__OyaDZ\",\"form\":\"createIntervalTimer_form__bNsx2\",\"timerNameBox\":\"createIntervalTimer_timerNameBox__bdoSD\",\"timerName\":\"createIntervalTimer_timerName__eGFL8\",\"timerNameSup\":\"createIntervalTimer_timerNameSup__WO2qx createIntervalTimer_timerName__eGFL8\",\"timerNameInput\":\"createIntervalTimer_timerNameInput__n3F+s\",\"timeBox\":\"createIntervalTimer_timeBox__xb6fz\",\"timeTittle\":\"createIntervalTimer_timeTittle__uEjGX createIntervalTimer_timerName__eGFL8\",\"timeNumbBox\":\"createIntervalTimer_timeNumbBox__eFyEv\",\"timeLabel\":\"createIntervalTimer_timeLabel__daRg8 createIntervalTimer_timerName__eGFL8\",\"input\":\"createIntervalTimer_input__93cG2\",\"saveBox\":\"createIntervalTimer_saveBox__C2LSK\",\"saveLabel\":\"createIntervalTimer_saveLabel__rM+oZ\",\"saveInput\":\"createIntervalTimer_saveInput__KtBZk\",\"button\":\"createIntervalTimer_button__f90ue\",\"repeatBox\":\"createIntervalTimer_repeatBox__MWU2K\",\"repeatLabel\":\"createIntervalTimer_repeatLabel__pOvxd\",\"repeatSpan\":\"createIntervalTimer_repeatSpan__UnqxC\",\"repeatInput\":\"createIntervalTimer_repeatInput__wNX5H\"};","import CreateIntervalTimer from \"./CreateIntervalTimer\";\n\nexport default CreateIntervalTimer;","import { useEffect, useState } from \"react\";\nimport { Navigate } from 'react-router-dom';\nimport { nanoid } from 'nanoid';\nimport { getTimeSum } from 'helpers';\nimport s from './createIntervalTimer.module.scss';\nimport ButtonBack from \"components/ButtonBack\";\nimport ButtonHome from \"components/ButtonHome\";\n\nconst CreateIntervalTimer = () => {\n    const [timers, setTimers] = useState(() => JSON.parse(localStorage.getItem('timers')) ?? []); // лінива ініціалізація\n    const [disposableTimer, setDisposableTimer] = useState('');\n\n    const [saveTimer, setSaveTimer] = useState(false);\n    const [startTimer, setStartTimer] = useState(false);\n    const [typeTimer] = useState('interval');\n\n    const [name, setName] = useState('');\n    const [workHours, setWorkHours] = useState('');\n    const [workMinutes, setWorkMinutes] = useState('');\n    const [workSeconds, setWorkSeconds] = useState('');\n    const [restHours, setRestHours] = useState('');\n    const [restMinutes, setRestMinutes] = useState('');\n    const [restSeconds, setRestSeconds] = useState('');\n    const [numbOfRepeat, setNumbOfRepeat] = useState('');\n\n    const [workSum, setWorkSum] = useState('');\n    const [restSum, setRestSum] = useState('');\n\n    const handleChange = e => {\n        const { name, value } = e.currentTarget; // отримую значення з інпуту\n\n        switch (name) {  // записую введені дані \n            case 'name':\n                setName(value);\n                break;\n            \n            case 'workHours':\n                setWorkHours(value);\n                break;\n            \n            case 'workMinutes':\n                setWorkMinutes(value);\n                break;\n            \n            case 'workSeconds':\n                setWorkSeconds(value);\n                break;\n            \n            case 'restHours':\n                setRestHours(value);\n                break;\n            \n            case 'restMinutes':\n                setRestMinutes(value);\n                break;\n            \n            case 'restSeconds':\n                setRestSeconds(value);\n                break;\n            \n            case 'repeat':\n                setNumbOfRepeat(Number(value));\n                break;\n        \n            default:\n                break;\n        };\n    };\n\n    const handleSave = e => {\n        setSaveTimer(prevState => !prevState) // якщо натиснути чекбокс \"зберегти\"\n    };\n\n    useEffect(() => { \n        const timeSum = getTimeSum( workSeconds, workMinutes, workHours );\n        setWorkSum(timeSum);\n    }, [workSeconds, workMinutes, workHours]);\n\n    useEffect(() => { \n        const timeRestSum = getTimeSum( restSeconds, restMinutes, restHours );\n        setRestSum(timeRestSum);\n    },[restSeconds, restMinutes, restHours])\n\n    const handleCreate = (e) => {\n        e.preventDefault();\n\n        const timer = {\n            id: nanoid(6),\n            typeTimer,\n            name,\n            workSum,\n            restSum,\n            numbOfRepeat\n        };\n\n        if (saveTimer) { setTimers(prevState => [...timers, timer]) }; // якщо потрібно то додаю новий таймер до всіх\n        \n        setDisposableTimer(timer) // додаю таймер в одноразовий сторедж\n        setStartTimer(true) // \n        reset();\n    };\n\n    const reset = () => {\n        // очищую імпути\n        setName('');\n        setWorkHours('');\n        setWorkMinutes('');\n        setWorkSeconds('');\n        setRestHours('');\n        setRestMinutes('');\n        setRestSeconds('');\n        setWorkSum('');\n        setRestSum('');\n        setNumbOfRepeat('');\n    };\n\n    useEffect(() => { // записую в локал сторедж таймери\n        window.localStorage.setItem('timers', JSON.stringify(timers))\n    }, [timers])\n    \n    useEffect(() => { // записую в локал сторедж одноразовий таймер\n        window.localStorage.setItem('interval', JSON.stringify(disposableTimer))\n    },[disposableTimer])\n\n    return (\n        <div className={s.container}>\n            {startTimer && <Navigate to={`/timers/interval`} replace={true} />}\n            <div className={s.btnBox}>\n                <ButtonBack />\n                <ButtonHome/>\n            </div>\n            <form onSubmit={handleCreate} className={s.form}>\n                <div className={s.timerNameBox}>\n                    <label className={s.timerName}> Ім'я для таймера <sup className={s.timerNameSup}>(необов'язково)</sup>\n                        <input \n                            type=\"text\" \n                            name=\"name\"\n                            value={name}\n                            onChange={handleChange}\n                            placeholder=\"Наприклад: Біг з прискоренням\"\n                            className={s.timerNameInput}\n                            title=\"Введіть ім'я таймера\"\n                        />\n                    </label>\n                </div>\n                <div className={s.timeBox}>\n                    <p className={s.timeTittle}>Час таймера</p>\n                    <div className={s.timeNumbBox}>\n                        <label className={s.timeLabel}> години\n                            <input \n                                type=\"number\" \n                                name=\"workHours\"\n                                value={workHours}\n                                min=\"0\"\n                                max=\"23\"\n                                pattern=\"[0-9]{2}\"\n                                onChange={handleChange}\n                                placeholder=\"гг\"\n                                className={s.input}\n                                title=\"Години\"\n                            />\n                        </label>\n                        <label className={s.timeLabel}> хвилини\n                            <input \n                                type=\"number\" \n                                name=\"workMinutes\"\n                                value={workMinutes}\n                                min=\"0\"\n                                max=\"59\"\n                                onChange={handleChange}\n                                placeholder=\"хх\"\n                                className={s.input}\n                                title=\"Хвилини\"\n                            />\n                        </label>\n                        <label className={s.timeLabel}> секунди\n                            <input \n                                type=\"number\" \n                                name=\"workSeconds\"\n                                value={workSeconds}\n                                min=\"0\"\n                                max=\"59\"\n                                onChange={handleChange}\n                                placeholder=\"сс\"\n                                className={s.input}\n                                title=\"Секунди\"\n                            />\n                        </label>\n                    </div>\n                </div>\n                <div className={s.timeBox}>\n                    <p className={s.timeTittle}>Час відпочинку</p>\n                    <div className={s.timeNumbBox}>\n                        <label className={s.timeLabel}> години\n                            <input \n                                type=\"number\" \n                                name=\"restHours\"\n                                value={restHours}\n                                min=\"0\"\n                                max=\"23\"\n                                pattern=\"[0-9]{2}\"\n                                onChange={handleChange}\n                                placeholder=\"гг\"\n                                className={s.input}\n                                title=\"Години\"\n                            />\n                        </label>\n                        <label className={s.timeLabel}> хвилини\n                            <input \n                                type=\"number\" \n                                name=\"restMinutes\"\n                                value={restMinutes}\n                                min=\"0\"\n                                max=\"59\"\n                                onChange={handleChange}\n                                placeholder=\"хх\"\n                                className={s.input}\n                                title=\"Хвилини\"\n                            />\n                        </label>\n                        <label className={s.timeLabel}> секунди\n                            <input \n                                type=\"number\" \n                                name=\"restSeconds\"\n                                value={restSeconds}\n                                min=\"0\"\n                                max=\"59\"\n                                onChange={handleChange}\n                                placeholder=\"сс\"\n                                className={s.input}\n                                title=\"Секунди\"\n                            />\n                        </label>\n                    </div>\n                </div>\n                <div className={s.repeatBox}>\n                    <label className={s.repeatLabel}> <span className={s.repeatSpan}>Кількість повторів </span></label>\n                    <input \n                        type=\"number\" \n                        name=\"repeat\"\n                        value={numbOfRepeat}\n                        min=\"0\"\n                        max=\"99\"\n                        onChange={handleChange}\n                        placeholder=\"0\"\n                        className={s.repeatInput}\n                        title=\"Кількість повторів\"\n                    />\n                </div>\n                <div className={s.saveBox}>\n                    <label className={s.saveLabel} for=\"saveInput\"> Зберегти таймер </label>\n                    <input \n                        type=\"checkbox\"\n                        name=\"handleChange\"\n                        checked={saveTimer}\n                        onChange={handleSave}\n                        className={s.saveInput}\n                        id=\"saveInput\"\n                    />\n                </div>\n                <button\n                    type=\"submit\"\n                    className={s.button}\n                    disabled={!workSum}\n                >\n                    Створити\n                </button>\n            </form>\n        </div>\n    );\n};\n\nexport default CreateIntervalTimer;","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["to","className","s","seconds","minutes","hours","useState","JSON","parse","localStorage","getItem","timers","setTimers","disposableTimer","setDisposableTimer","saveTimer","setSaveTimer","startTimer","setStartTimer","typeTimer","name","setName","workHours","setWorkHours","workMinutes","setWorkMinutes","workSeconds","setWorkSeconds","restHours","setRestHours","restMinutes","setRestMinutes","restSeconds","setRestSeconds","numbOfRepeat","setNumbOfRepeat","workSum","setWorkSum","restSum","setRestSum","handleChange","e","currentTarget","value","Number","useEffect","timeSum","getTimeSum","timeRestSum","reset","window","setItem","stringify","replace","ButtonBack","ButtonHome","onSubmit","preventDefault","timer","id","nanoid","prevState","type","onChange","placeholder","title","min","max","pattern","for","checked","disabled","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase"],"sourceRoot":""}