{"version":3,"file":"static/js/586.6d19c1f1.chunk.js","mappings":"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","sources":["webpack://timer-just/./src/components/IntervalTimer/intervalTimer.module.scss?e93d","components/IntervalTimer/index.js","components/IntervalTimer/IntervalTimer.jsx","helpers/addLeadingZero.js","helpers/getTimeUnits.js","pages/SavedIntervalTimer/index.js","pages/SavedIntervalTimer/SavedIntervalTimer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"box\":\"intervalTimer_box__1fHDK\",\"time\":\"intervalTimer_time__lVLTU\",\"link\":\"intervalTimer_link__IMVCe\"};","import IntervalTimer from './IntervalTimer.jsx';\n\nexport default IntervalTimer;","import { useEffect, useState, useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport { addLeadingZero, getTimeUnits } from 'helpers';\nimport s from './intervalTimer.module.scss';\n\nconst IntervalTimer = ({data}) => {\n    const [timer, setTimer] = useState({});\n    const [name, setName] = useState('');\n\n    const [timeWork, setTimeWork] = useState('');\n    const [timeRest, setTimeRest] = useState('');\n\n    const [workHours, setWorkHours] = useState('');\n    const [workMinutes, setWorkMinutes] = useState('');\n    const [workSeconds, setWorkSeconds] = useState('');\n    const [restHours, setRestHours] = useState('');\n    const [restMinutes, setRestMinutes] = useState('');\n    const [restSeconds, setRestSeconds] = useState('');\n    const [numbOfRepeat, setNumbOfRepeat] = useState(0);\n\n    const [applyWorkTimer, setApplyWorkTimer] = useState(false);\n    const [applyRestTimer, setApplyRestTimer] = useState(false);\n\n    const intervalId = useRef(null);\n    const timerIsRunning = applyWorkTimer || applyRestTimer;\n\n    useEffect(() => {\n        setTimer(data)\n    }, [data]);\n\n    useEffect(() => {\n        const { workSum, restSum, numbOfRepeat, name } = timer;\n        setTimeWork(workSum); // отримую суму часу роботи\n        setTimeRest(restSum); // отримую суму часу відпочинку\n        setNumbOfRepeat(numbOfRepeat); // отримую кількість повторів \n        name ? setName(name) : setName('Timer');\n    }, [timer])\n    \n    useEffect(() => {\n        const { hours, minutes, seconds } = getTimeUnits(timeWork); // дістаю одиниці часу для роботи\n        setWorkHours(hours);\n        setWorkMinutes(minutes);\n        setWorkSeconds(seconds);\n    }, [timeWork])\n\n    useEffect(() => {\n        const { hours, minutes, seconds } = getTimeUnits(timeRest); // дістаю одиниці часу для відпочинку\n        setRestHours(hours);\n        setRestMinutes(minutes);\n        setRestSeconds(seconds);\n    }, [timeRest])\n\n    useEffect(() => {\n        if (!applyWorkTimer) return; // виключаю запуск одразу при рендері\n\n        intervalId.current = setInterval(() => {\n            setTimeWork(state => state - 1); // таймер для робочого часу\n        }, 1000);\n    }, [applyWorkTimer]);\n\n    useEffect(() => {\n        if (timeWork === 0) {\n            stopTimer(); // автоматичне вимкнення таймера при закінченні часу\n            setApplyRestTimer(true); // якщо робочий час закінчився, то автоматично вмикається відпочинок\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [timeWork]);\n\n    useEffect(() => {\n        if (!applyRestTimer) return; // виключаю запуск одразу при рендері\n\n        //відпочинковий таймер\n        intervalId.current = setInterval(() => {\n            setTimeRest(state => state - 1); // таймер для відпочинку\n        }, 1000);\n    }, [applyRestTimer])\n\n    useEffect(() => {\n        if (timeRest === 0) { stopTimer() };  // автоматична зупинка відпочинку, при заваршені часу\n        // if (numbOfRepeat !== 0) { setNumbOfRepeat(state => state - 1) }; // запускаю наступне коло\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [timeRest]);\n\n    // useEffect(() => {\n    //     if (condition) {\n            \n    //     }\n    // })\n\n    const startTimer = () => {\n        if (timeWork !== 0) { setApplyWorkTimer(true) }; // якщо є робочий час то тільки тоді можна запустити його і не дозволяю йти в мінус\n        if (timeWork === 0  && timeRest !== 0) { setApplyRestTimer(true) }; // дозволяю відновлювати відпочинок тільки коли нема робочого часу\n    };\n\n    const stopTimer = () => {\n        clearInterval(intervalId.current);\n        setApplyWorkTimer(false); // зупиняю таймер\n        if (timeWork === 0) { setApplyRestTimer(false) }; // якщо робочий час === 0, то тільки тоді можна зупитяти відпочинок\n    };\n\n    return (\n        <div>\n            {timer\n                ?\n                <>\n                    <h2>{name} </h2>\n                    <div className={s.box}>\n                        {workHours !== addLeadingZero(0) && <p className={s.time} >{workHours} </p>}\n                        <p className={s.time} >{workMinutes} </p>\n                        <p className={s.time} >{workSeconds} </p>\n                    </div>\n                    <div className={s.box}>\n                        {restHours !== addLeadingZero(0) && <p className={s.time} >{restHours} </p>}\n                        <p className={s.time} >{restMinutes} </p>\n                        <p className={s.time} >{restSeconds} </p>\n                    </div>\n                    {numbOfRepeat && <p className={s.time} >{numbOfRepeat} </p>}\n                    <p >{name} </p>\n                    {!timerIsRunning &&  <button type='button' onClick={startTimer}>start</button>}\n                    {timerIsRunning &&  <button type='button' onClick={stopTimer}>pause</button>}\n                </>\n                :\n                <h1>НЕМА</h1>\n            }\n            <Link to={`/home`} className={s.link}> home </Link>\n        </div>\n    );\n};\n\nexport default IntervalTimer;","// роблю обовязковими 2 цифри, і якщо є лиш одна, то ставлю спереді 0\nconst addLeadingZero = (value) => {\n    return String(value).padStart(2, '0');\n};\n\nexport default addLeadingZero;\n\n","import addLeadingZero from \"./addLeadingZero\";\n\n\n// переводжу суму часу в одиниці\nconst getTimeUnits = (value) => {\n    const hours = addLeadingZero(Math.floor(value / 3600));\n    const minutes = addLeadingZero(Math.floor((value % 3600) / 60));\n    const seconds = addLeadingZero(Math.floor((value % 3600) % 60));\n    return {hours, minutes, seconds};\n};\n\nexport default getTimeUnits;","import SavedIntervalTimer from \"./SavedIntervalTimer\";\n\nexport default SavedIntervalTimer;","import { useParams } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport IntervalTimer from \"components/IntervalTimer\";\n\n\nconst SavedIntervalTimer = () => {\n    const [timers] = useState(() => JSON.parse(localStorage.getItem('timers')) ?? []);\n    const [timer, setTimer] = useState('');\n    const { id } = useParams();\n\n    useEffect(() => {\n        const availableTimer = timers.find(timer => timer.id === id);\n        if (availableTimer) { setTimer(availableTimer) };\n    }, [id, timers])\n\n    return ( <IntervalTimer data={timer}/> );\n};\n\nexport default SavedIntervalTimer;\n"],"names":["data","useState","timer","setTimer","name","setName","timeWork","setTimeWork","timeRest","setTimeRest","workHours","setWorkHours","workMinutes","setWorkMinutes","workSeconds","setWorkSeconds","restHours","setRestHours","restMinutes","setRestMinutes","restSeconds","setRestSeconds","numbOfRepeat","setNumbOfRepeat","applyWorkTimer","setApplyWorkTimer","applyRestTimer","setApplyRestTimer","intervalId","useRef","timerIsRunning","useEffect","workSum","restSum","getTimeUnits","hours","minutes","seconds","current","setInterval","state","stopTimer","clearInterval","className","s","addLeadingZero","type","onClick","to","value","String","padStart","Math","floor","JSON","parse","localStorage","getItem","timers","id","useParams","availableTimer","find","IntervalTimer"],"sourceRoot":""}